/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type DictionaryFeedback = {
  _id: string;
  _type: 'dictionaryFeedback';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  successMessage?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  errorMessage?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  deleteMessage?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  emptyPatientData?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  emptyTreatmentData?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  yes?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  no?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
};

export type DictionaryGeneral = {
  _id: string;
  _type: 'dictionaryGeneral';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  aboutUs?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  contact?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  prices?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  pricesTableTitle?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  login?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  email?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  password?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  schedule?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  studio?: string;
};

export type DictionaryEdit = {
  _id: string;
  _type: 'dictionaryEdit';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  addPatient?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  editPatient?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  deletePatient?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  addTreatment?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  editTreatment?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  deleteTreatment?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  save?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  cancel?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
};

export type DictionaryNavigation = {
  _id: string;
  _type: 'dictionaryNavigation';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  menu?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  patients?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  dashboard?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  general?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  logout?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  profile?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  backToPatients?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
};

export type DictionaryTreatment = {
  _id: string;
  _type: 'dictionaryTreatment';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  treatment?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  date?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  price?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  gdpr?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  consent?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
};

export type DictionaryPatient = {
  _id: string;
  _type: 'dictionaryPatient';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  firstName?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  lastName?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  phone?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  patientFile?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  birthdate?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  city?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  country?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  cnp?: string;
};

export type Article = {
  _id: string;
  _type: 'article';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'image';
  };
  body?: Array<
    {
      _key: string;
    } & InternationalizedArrayBlockContentValue
  >;
};

export type Treatment = {
  _id: string;
  _type: 'treatment';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  slug?: Slug;
  treatmentGroup?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'treatmentGroup';
  };
  price?: string;
};

export type TreatmentGroup = {
  _id: string;
  _type: 'treatmentGroup';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  order?: number;
  slug?: Slug;
};

export type SiteInfo = {
  _id: string;
  _type: 'siteInfo';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subtitle?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  logo?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  name?: string;
  profession?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  motto?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  stageImage?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'gallery';
  };
  phone?: string;
  email?: string;
  address?: string;
  timetable?: Array<
    {
      _key: string;
    } & InternationalizedArrayBlockContentValue
  >;
  loginImage?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'gallery';
  };
};

export type Gallery = {
  _id: string;
  _type: 'gallery';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'image';
  };
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'blockquote';
      listItem?: 'bullet';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: 'image';
      _key: string;
    }
>;

export type InternationalizedArrayBlockContentValue = {
  _type: 'internationalizedArrayBlockContentValue';
  value?: BlockContent;
};

export type InternationalizedArrayStringValue = {
  _type: 'internationalizedArrayStringValue';
  value?: string;
};

export type InternationalizedArrayBlockContent = Array<
  {
    _key: string;
  } & InternationalizedArrayBlockContentValue
>;

export type InternationalizedArrayString = Array<
  {
    _key: string;
  } & InternationalizedArrayStringValue
>;

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | DictionaryFeedback
  | DictionaryGeneral
  | DictionaryEdit
  | DictionaryNavigation
  | DictionaryTreatment
  | DictionaryPatient
  | Article
  | Treatment
  | TreatmentGroup
  | SiteInfo
  | Gallery
  | BlockContent
  | InternationalizedArrayBlockContentValue
  | InternationalizedArrayStringValue
  | InternationalizedArrayBlockContent
  | InternationalizedArrayString
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: SITEINFO_QUERY
// Query: *[_type == "siteInfo"][0]{  _id,  title,  subtitle[_key == $language][0]{value},  name,  profession[_key == $language][0]{value},  logo,  phone,  address,  email,   timetable[_key == $language][0]{value},  loginImage->{    image  },}
export type SITEINFO_QUERYResult = {
  _id: string;
  title: string | null;
  subtitle: {
    value: string | null;
  } | null;
  name: string | null;
  profession: {
    value: string | null;
  } | null;
  logo: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  phone: string | null;
  address: string | null;
  email: string | null;
  timetable: {
    value: BlockContent | null;
  } | null;
  loginImage: {
    image: {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: 'image';
    } | null;
  } | null;
} | null;
// Variable: GALLERY_QUERY
// Query: *[_type == "gallery"]{  _id,  title,  image}
export type GALLERY_QUERYResult = Array<{
  _id: string;
  title: string | null;
  image: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'image';
  } | null;
}>;
// Variable: STAGE_QUERY
// Query: *[_type == "siteInfo"][0]{  _id,  motto[_key == $language][0]{value},  stageImage->{    image  },  name,  profession[_key == $language][0]{value}}
export type STAGE_QUERYResult = {
  _id: string;
  motto: {
    value: string | null;
  } | null;
  stageImage: {
    image: {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: 'image';
    } | null;
  } | null;
  name: string | null;
  profession: {
    value: string | null;
  } | null;
} | null;
// Variable: ARTICLE_QUERY
// Query: *[_type == "article"]{  _id,  title[_key == $language][0]{value},  image,  body[_key == $language][0]{value},}
export type ARTICLE_QUERYResult = Array<{
  _id: string;
  title: {
    value: string | null;
  } | null;
  image: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'image';
  } | null;
  body: {
    value: BlockContent | null;
  } | null;
}>;
// Variable: ARTICLE_SLUG_QUERY
// Query: *[_type == "article"][slug.current == $slug][0] {  _id,  title[_key == $language][0]{value},  image,  body[_key == $language][0]{value},  "plainContent":pt::text(body[_key == $language].value)}
export type ARTICLE_SLUG_QUERYResult = {
  _id: string;
  title: {
    value: string | null;
  } | null;
  image: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'image';
  } | null;
  body: {
    value: BlockContent | null;
  } | null;
  plainContent: string;
} | null;
// Variable: TREATMENT_QUERY
// Query: *[_type == "treatmentGroup"] | order(order asc) {  _id,  name[_key == $language][0]{value},  order,  slug,  "treatments": *[_type == "treatment" && references(^._id)]    | order(name[_key == $language][0].value asc) {      _id,      name[_key == $language][0]{value},      price,      slug    }}
export type TREATMENT_QUERYResult = Array<{
  _id: string;
  name: {
    value: string | null;
  } | null;
  order: number | null;
  slug: Slug | null;
  treatments: Array<{
    _id: string;
    name: {
      value: string | null;
    } | null;
    price: string | null;
    slug: Slug | null;
  }>;
}>;
// Variable: DICTIONARY_GENERAL_QUERY
// Query: *[_type == "dictionaryGeneral"][0]{    "aboutUs":aboutUs[_key == $language][0].value,    "prices": prices[_key == $language][0].value,    "contact":contact[_key == $language][0].value,    "pricesTableTitle":pricesTableTitle[_key == $language][0].value,    "login":login[_key == $language][0].value,    "email":email[_key == $language][0].value,    "password":password[_key == $language][0].value,    "schedule":schedule[_key == $language][0].value,    "studio":studio,  }
export type DICTIONARY_GENERAL_QUERYResult = {
  aboutUs: string | null;
  prices: string | null;
  contact: string | null;
  pricesTableTitle: string | null;
  login: string | null;
  email: string | null;
  password: string | null;
  schedule: string | null;
  studio: string | null;
} | null;
// Variable: DICTIONARY_NAVIGATION_QUERY
// Query: *[_type == "dictionaryNavigation"][0]{    "dashboard":dashboard[_key == $language][0].value,    "patients":patients[_key == $language][0].value,    "menu":menu[_key == $language][0].value,    "general":general[_key == $language][0].value,    "logout":logout[_key == $language][0].value,    "profile": profile[_key == $language][0].value,    "backToPatients": backToPatients[_key == $language][0].value,  }
export type DICTIONARY_NAVIGATION_QUERYResult = {
  dashboard: string | null;
  patients: string | null;
  menu: string | null;
  general: string | null;
  logout: string | null;
  profile: string | null;
  backToPatients: string | null;
} | null;
// Variable: DICTIONARY_EDIT_QUERY
// Query: *[_type == "dictionaryEdit"][0]{    "addPatient": addPatient[_key == $language][0].value,    "editPatient": editPatient[_key == $language][0].value,    "deletePatient": deletePatient[_key == $language][0].value,    "addTreatment": addTreatment[_key == $language][0].value,    "editTreatment": editTreatment[_key == $language][0].value,    "deleteTreatment": deleteTreatment[_key == $language][0].value,    "save": save[_key == $language][0].value,    "cancel": cancel[_key == $language][0].value,  }
export type DICTIONARY_EDIT_QUERYResult = {
  addPatient: string | null;
  editPatient: string | null;
  deletePatient: string | null;
  addTreatment: string | null;
  editTreatment: string | null;
  deleteTreatment: string | null;
  save: string | null;
  cancel: string | null;
} | null;
// Variable: DICTIONARY_PATIENT_QUERY
// Query: *[_type == "dictionaryPatient"][0]{    "firstName": firstName[_key == $language][0].value,    "lastName": lastName[_key == $language][0].value,    "phone": phone[_key == $language][0].value,    "city": city[_key == $language][0].value,    "country": country[_key == $language][0].value,    "patientFile": patientFile[_key == $language][0].value,    "birthdate": birthdate[_key == $language][0].value,    "cnp": cnp  }
export type DICTIONARY_PATIENT_QUERYResult = {
  firstName: string | null;
  lastName: string | null;
  phone: string | null;
  city: string | null;
  country: string | null;
  patientFile: string | null;
  birthdate: string | null;
  cnp: string | null;
} | null;
// Variable: DICTIONARY_TREATMENT_QUERY
// Query: *[_type == "dictionaryTreatment"][0]{    "treatment": treatment[_key == $language][0].value,    "price": price[_key == $language][0].value,    "gdpr": gdpr[_key == $language][0].value,    "consent": consent[_key == $language][0].value,    "date": date[_key == $language][0].value,  }
export type DICTIONARY_TREATMENT_QUERYResult = {
  treatment: string | null;
  price: string | null;
  gdpr: string | null;
  consent: string | null;
  date: string | null;
} | null;
// Variable: DICTIONARY_FEEDBACK_QUERY
// Query: *[_type == "dictionaryFeedback"][0]{    "successMessage": successMessage[_key == $language][0].value,    "errorMessage": errorMessage[_key == $language][0].value,    "deleteMessage": deleteMessage[_key == $language][0].value,    "emptyPatientData": emptyPatientData[_key == $language][0].value,    "emptyTreatmentData": emptyTreatmentData[_key == $language][0].value,    "yes": yes[_key == $language][0].value,    "no": no[_key == $language][0].value,  }
export type DICTIONARY_FEEDBACK_QUERYResult = {
  successMessage: string | null;
  errorMessage: string | null;
  deleteMessage: string | null;
  emptyPatientData: string | null;
  emptyTreatmentData: string | null;
  yes: string | null;
  no: string | null;
} | null;

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
  interface SanityQueries {
    '*[_type == "siteInfo"][0]{\n  _id,\n  title,\n  subtitle[_key == $language][0]{value},\n  name,\n  profession[_key == $language][0]{value},\n  logo,\n  phone,\n  address,\n  email, \n  timetable[_key == $language][0]{value},\n  loginImage->{\n    image\n  },\n}': SITEINFO_QUERYResult;
    '*[_type == "gallery"]{\n  _id,\n  title,\n  image\n}': GALLERY_QUERYResult;
    '*[_type == "siteInfo"][0]{\n  _id,\n  motto[_key == $language][0]{value},\n  stageImage->{\n    image\n  },\n  name,\n  profession[_key == $language][0]{value}\n}': STAGE_QUERYResult;
    '*[_type == "article"]{\n  _id,\n  title[_key == $language][0]{value},\n  image,\n  body[_key == $language][0]{value},\n}': ARTICLE_QUERYResult;
    '*[_type == "article"][slug.current == $slug][0] {\n  _id,\n  title[_key == $language][0]{value},\n  image,\n  body[_key == $language][0]{value},\n  "plainContent":pt::text(body[_key == $language].value)\n}': ARTICLE_SLUG_QUERYResult;
    '*[_type == "treatmentGroup"] | order(order asc) {\n  _id,\n  name[_key == $language][0]{value},\n  order,\n  slug,\n  "treatments": *[_type == "treatment" && references(^._id)]\n    | order(name[_key == $language][0].value asc) {\n      _id,\n      name[_key == $language][0]{value},\n      price,\n      slug\n    }\n}': TREATMENT_QUERYResult;
    '*[_type == "dictionaryGeneral"][0]{\n    "aboutUs":aboutUs[_key == $language][0].value,\n    "prices": prices[_key == $language][0].value,\n    "contact":contact[_key == $language][0].value,\n    "pricesTableTitle":pricesTableTitle[_key == $language][0].value,\n    "login":login[_key == $language][0].value,\n    "email":email[_key == $language][0].value,\n    "password":password[_key == $language][0].value,\n    "schedule":schedule[_key == $language][0].value,\n    "studio":studio,\n  }': DICTIONARY_GENERAL_QUERYResult;
    '*[_type == "dictionaryNavigation"][0]{\n    "dashboard":dashboard[_key == $language][0].value,\n    "patients":patients[_key == $language][0].value,\n    "menu":menu[_key == $language][0].value,\n    "general":general[_key == $language][0].value,\n    "logout":logout[_key == $language][0].value,\n    "profile": profile[_key == $language][0].value,\n    "backToPatients": backToPatients[_key == $language][0].value,\n  }': DICTIONARY_NAVIGATION_QUERYResult;
    '*[_type == "dictionaryEdit"][0]{\n    "addPatient": addPatient[_key == $language][0].value,\n    "editPatient": editPatient[_key == $language][0].value,\n    "deletePatient": deletePatient[_key == $language][0].value,\n    "addTreatment": addTreatment[_key == $language][0].value,\n    "editTreatment": editTreatment[_key == $language][0].value,\n    "deleteTreatment": deleteTreatment[_key == $language][0].value,\n    "save": save[_key == $language][0].value,\n    "cancel": cancel[_key == $language][0].value,\n  }': DICTIONARY_EDIT_QUERYResult;
    '*[_type == "dictionaryPatient"][0]{\n    "firstName": firstName[_key == $language][0].value,\n    "lastName": lastName[_key == $language][0].value,\n    "phone": phone[_key == $language][0].value,\n    "city": city[_key == $language][0].value,\n    "country": country[_key == $language][0].value,\n    "patientFile": patientFile[_key == $language][0].value,\n    "birthdate": birthdate[_key == $language][0].value,\n    "cnp": cnp\n  }': DICTIONARY_PATIENT_QUERYResult;
    '*[_type == "dictionaryTreatment"][0]{\n    "treatment": treatment[_key == $language][0].value,\n    "price": price[_key == $language][0].value,\n    "gdpr": gdpr[_key == $language][0].value,\n    "consent": consent[_key == $language][0].value,\n    "date": date[_key == $language][0].value,\n  }': DICTIONARY_TREATMENT_QUERYResult;
    '*[_type == "dictionaryFeedback"][0]{\n    "successMessage": successMessage[_key == $language][0].value,\n    "errorMessage": errorMessage[_key == $language][0].value,\n    "deleteMessage": deleteMessage[_key == $language][0].value,\n    "emptyPatientData": emptyPatientData[_key == $language][0].value,\n    "emptyTreatmentData": emptyTreatmentData[_key == $language][0].value,\n    "yes": yes[_key == $language][0].value,\n    "no": no[_key == $language][0].value,\n  }': DICTIONARY_FEEDBACK_QUERYResult;
  }
}
